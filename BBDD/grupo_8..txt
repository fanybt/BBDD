-- MYSQL
CREATE DATABASE IF NOT EXISTS AD5;
USE AD5;
CREATE TABLE CENTROS (
NUMCE INT(4) NOT NULL,
NOMCE varchar(25),
DIRCE varchar(25)
);

CREATE TABLE DEPARTAMENTOS (
NUMDE INT(3) NOT NULL,
NUMCE INT(4),
DIREC INT(3),
TIDIR CHAR(1),
PRESU numeric (3,1),
DEPDE INT(3),
NOMDE VARCHAR(20)
);

CREATE TABLE EMPLEADOS (
NUMEM INT(3) NOT NULL,
EXTEL INT(3),
FECNA DATE ,
FECIN DATE,
SALAR INT(5),
COMIS INT(3),
NUMHI INT(1),
NOMEM VARCHAR (10),
NUMDE INT(3)
);

-- Primary key de todas las tablas
ALTER TABLE CENTROS
ADD PRIMARY KEY (NUMCE);

ALTER TABLE DEPARTAMENTOS
ADD PRIMARY KEY (NUMDE);

ALTER TABLE EMPLEADOS
ADD PRIMARY KEY (NUMEM);

-- Foreign key
ALTER TABLE DEPARTAMENTOS
ADD CONSTRAINT Empleados_Departamentos_FK
FOREIGN KEY (NUMCE) REFERENCES CENTROS (NUMCE)
ON DELETE SET NULL;
        
ALTER TABLE DEPARTAMENTOS
ADD CONSTRAINT Departamentos_FK
FOREIGN KEY (DEPDE) REFERENCES DEPARTAMENTOS (NUMDE)
ON DELETE SET NULL;

ALTER TABLE EMPLEADOS
ADD CONSTRAINT Departamentos_EmpleadosFK
FOREIGN KEY (NUMDE) REFERENCES DEPARTAMENTOS (NUMDE)
ON DELETE SET NULL;

-- Introducimos datos en la tabla DEPARTAMENTOS
INSERT INTO DEPARTAMENTOS (NUMDE,NUMCE,DIREC,TIDIR,PRESU,DEPDE,NOMDE) VALUES
(100,10,260,'P',72,null,'DIRECCION GENERAL'),
(110,20,180,'P',90,100,'DIRECCION COMERCIAL'),
(111,20,180,'F',66,110,'SECTOR INDUSTRIAL'),
(112,20,270,'P',54,110,'SECTOR SERVICIOS'),
(120,10,150,'F',18,100,'ORGANIZACIÓN'),
(121,10,150,'P',12,120,'PERSONAL'),
(122,10,350,'P',36,120,'PROCESO DE DATOS'),
(130,10,310,'P',12,100,'FINANZAS');

-- ¿Qué ocurre al insertar el primer registro? ¿Por qué? Plantea la solución.
/* La columna NUMCE hace referencia a la tabla CENTROS de los cuales no están metidos los datos.
Como solución insertamos primero los datos de los centros. Primero hay que insertar los datos
de las tablas que no tienen FK y después las que tienen. Entendemos que hay otras posibles
soluciones pero lo hemos decidido así.*/
-- Introducimos datos en la tabla CENTROS
INSERT INTO CENTROS (NUMCE,NOMCE,DIRCE)VALUES
(10,'SEDE CENTRAL','C/ATOCHA ,820,MADRID'),
(20,'RELACION CON CLIENTES','C/ATOCHA,405,MADRID');

-- Inserta los siguientes datos en la tabla EMPLEADOS con un bulk insert:
INSERT INTO EMPLEADOS (NUMEM,EXTEL,FECNA,FECIN,SALAR,COMIS,NUMHI,NOMEM,NUMDE) VALUES 
  (110,350,'1970-11-10','1985-02-15',1800,NULL,3,'CESAR',121),
  (120,840,'1968-06-09','1988-10-01',1900,'110',1,'MARIO',112),
  (130,810,'1965-09-09','1981-02-01',1500,'110',2,'LUCIANO',112),
  (150,340,'1972-08-10','1997-01-15',2600,NULL,0,'JULIO',121),
  (160,740,'1980-07-09','2005-11-11',1800,'110',2,'AUREO',111),
  (180,508,'1974-10-18','1996-03-18',2800,'50',2,'MARCOS',110),
  (190,350,'1972-05-12','1992-02-11',1750,NULL,4,'JULIANA',121),
  (210,200,'1970-09-28','1999-01-22',1910,NULL,2,'PILAR',100),
  (240,760,'1967-02-26','1989-02-24',1700,'100',3,'LAVINIA',111),
  (250,250,'1976-10-27','1997-03-01',2700,NULL,0,'ADRIANA',100),
  (260,220,'1973-12-03','2001-07-12',720,NULL,6,'ANTONIO',100),
  (270,800,'1975-05-21','2003-09-10',1910,'80',3,'OCTAVIO',112),
  (280,410,'1978-01-10','2010-10-08',1500,NULL,5,'DOROTEA',130),
  (285,620,'1979-10-25','2011-02-15',1910,NULL,0,'OTILIA',122),
  (290,910,'1967-11-30','1988-02-14',1790,NULL,3,'GLORIA',120),
  (310,480,'1976-11-21','2001-01-15',1950,NULL,0,'AUGUSTO',130),
  (320,620,'1977-12-25','2003-02-05',2400,NULL,2,'CORNELIO',122),
  (330,850,'1958-08-19','1980-03-01',1700,'90',0,'AMELIA',112),
  (350,610,'1979-04-13','1999-09-10',2700,NULL,1,'AURELIO',122),
  (360,750,'1978-10-29','1998-10-10',1800,'100',2,'DORINDA',111),
  (370,360,'1977-06-22','2000-01-20',1860,NULL,1,'FABIOLA',121),
  (380,880,'1978-03-30','1999-01-01',1100,NULL,0,'MICAELA',112),
  (390,500,'1976-02-19','2010-10-08',1290,NULL,1,'CARMEN',110),
  (400,780,'1979-08-18','2011-11-01',1150,NULL,0,'LUCRECIA',111),
  (410,660,'1968-07-14','1989-10-13',1010,NULL,0,'AZUCENA',122),
  (420,450,'1966-10-22','1988-11-19',2400,NULL,0,'CLAUDIA',130),
  (430,650,'1967-10-26','1988-11-19',1260,NULL,1,'VALERIANA',122),
  (440,760,'1966-09-26','1986-02-28',1260,'100',0,'LIVIA',111),
  (450,880,'1966-10-21','1986-02-28',1260,'100',0,'SABINA',112),
  (480,760,'1965-04-04','1986-02-28',1260,'100',1,'DIANA',111),
  (490,880,'1964-06-06','1988-01-01',1090,'100',0,'HORACIO',112),
  (500,750,'1965-10-08','1987-01-01',1200,'100',0,'HONORIA',111),
  (510,550,'1966-05-04','1986-11-01',1200,NULL,1,'ROMULO',110),
  (550,780,'1970-01-10','1998-01-21',600,120,0,'SANCHO',111);

/* 1. Para cada departamento con presupuesto inferior a 35.000 €,
hallar el nombre del Centro donde está ubicado y el máximo salario de sus empleados
(si dicho máximo excede de 1.500 €). Clasificar alfabéticamente por nombre de departamento.*/
SELECT d.nomde AS nombre_departamento, c.nomce AS nombre_centro, MAX(e.salar) AS salario_maximo
FROM departamentos d 
INNER JOIN centros c ON d.numce = c.numce
INNER JOIN empleados e ON d.numde = e.numde
WHERE d.presu < 35
GROUP BY d.nomde, c.nomce
HAVING MAX(e.salar) > 1500
ORDER BY d.nomde ASC;

/* 2. Hallar por orden alfabético los nombres de los departamentos que dependen
de los que tienen un presupuesto inferior a 30.000 €. También queremos conocer
el nombre del departamento del que dependen y su presupuesto.*/
SELECT nomde AS nombre_departamento, depde AS departamento_del_que_depende
FROM departamentos
WHERE depde IN (SELECT numde FROM departamentos WHERE presu < 30)
ORDER BY nomde ASC;

SELECT nomde AS nombre_departamento, presu AS presupuesto
FROM departamentos
WHERE numde = 120;

/* 3. Obtener los nombres y los salarios medios de los departamentos cuyo salario medio
supera al salario medio de la empresa.*/
SELECT departamentos.nomde AS nombre_departamento, AVG(empleados.salar) AS salario_medio
FROM departamentos
INNER JOIN empleados
ON departamentos.numde = empleados.numde
GROUP BY departamentos.nomde
HAVING AVG(empleados.salar) > (SELECT AVG(empleados.salar) FROM empleados);

/* 4. Para los departamentos cuyo director lo sea en funciones, hallar el número
de empleados y la suma de los salarios, comisiones y número de hijos.*/
SELECT departamentos.nomde AS nombre_departamento, count(empleados.numem) AS cantidad_empleados,
sum(empleados.salar) AS suma_salarios, sum(empleados.comis) AS suma_comisiones, sum(empleados.numhi) AS cantidad_hijos
FROM empleados
INNER JOIN departamentos ON empleados.numde = departamentos.numde 
WHERE departamentos.tidir = 'F'
GROUP BY departamentos.nomde;
 
/* 5. Para los departamentos cuyo presupuesto anual supera los 35000
hayar cuantos empleados hay por cada extensión telefónica.*/
SELECT extel AS extension_telefonica, nomde AS nombre_departamento, count(numem) AS cantidad_empleados
FROM empleados 
INNER JOIN departamentos
ON empleados.numde = departamentos.numde 
WHERE departamentos.presu > 35 
GROUP BY extel;
 
/* 6. Hallar por orden alfabético los nombres de los empleados y su numero de hijos 
para aquellos que son directores en funciones.*/
SELECT e.nomem AS nombre_empleados, e.numhi AS cantidad_hijos
FROM departamentos d
INNER JOIN empleados e
ON d.numde = e.numde
WHERE d.tidir = 'F'
GROUP BY e.nomem
ORDER BY e.nomem ASC;

/* 7 Hallar si hay algun departamento (suponemos que sea de reciente creación) que aun no tenga empleados asignados 
ni director en propiedad.*/
SELECT DISTINCT departamentos.nomde AS nombre_departamento, empleados.nomem AS nombre_empleados
FROM departamentos LEFT JOIN empleados
ON departamentos.numde = empleados.numde 
WHERE empleados.numem = NULL AND  departamentos.tidir<>'P';

-- 8. Añadir un nuevo departamento de nombre NUEVO y con director en funciones.
INSERT INTO DEPARTAMENTOS (NUMDE,NUMCE,DIREC,TIDIR,PRESU,DEPDE,NOMDE) VALUES
(131,null,null,'F',null,null,'NUEVO');

-- 9. Añadir un nuevo empleado de nombre NORBERTO y sin departamento asignado. Inventar el resto de datos.
INSERT INTO EMPLEADOS (NUMEM,EXTEL,FECNA,FECIN,SALAR,COMIS,NUMHI,NOMEM,NUMDE) VALUES 
(600,800,'1981-10-11','2000-06-26',1260,'30',0,'NORBERTO',NULL);
  
-- 10. Muestra los departamentos que no tienen empleados.
SELECT *
FROM departamentos
WHERE NOT EXISTS (
	SELECT *
    FROM empleados
    WHERE empleados.numde = departamentos.numde);

/* 11. Muestra los nombres de departamentos que no tienen empleados haciendo uso
la combinación externa LEFT JOIN. Muestra una segunda columna con los nombres de
empleados para asegurarnos que realmente está a NULL.*/
SELECT DISTINCT departamentos.nomde AS nombre_departamento, empleados.nomem AS nombre_empleado
FROM departamentos
LEFT JOIN empleados
ON departamentos.numde = empleados.numde
WHERE empleados.nomem IS NULL;

/*12. Muestra los nombres de departamentos que no tienen empleados haciendo uso
la combinación externa RIGH JOIN. Muestra una segunda columna con los nombres
de empleados para asegurarnos que realmente está a NULL.*/
SELECT DISTINCT departamentos.nomde AS nombre_departamento, empleados.nomem AS nombre_empleado
FROM empleados
RIGHT JOIN departamentos
ON departamentos.numde = empleados.numde
WHERE empleados.nomem IS NULL;

/*13. Muestra los nombres de empleados que no tienen departamento haciendo uso
la combinación externa LEFT JOIN. Muestra una segunda columna con los nombres de
departamentos para asegurarnos que realmente esta a NULL.*/
SELECT empleados.nomem AS nombre_empleado, empleados.numde AS numero_departamento
FROM empleados
LEFT JOIN departamentos
ON departamentos.numde = empleados.numde
WHERE empleados.numde IS NULL;

/*14. Muestra los nombres de empleados que no tienen departamento haciendo uso la
combinación externa RIGHT JOIN. Muestra una segunda columna con los nombres de empleados
para asegurarnos que realmente esta a NULL.*/
SELECT empleados.nomem AS nombre_empleado, empleados.numde AS numero_departamento
FROM departamentos
RIGHT JOIN empleados
ON departamentos.numde = empleados.numde
WHERE empleados.numde IS NULL;

/*15. Muestra los departamentos que no tienen empleados y los empleados que no tiene
departamento haciendo uso la combinación externa FULL JOIN.*/
-- Lo hacemos con UNION para simular el FULL JOIN en mysql. Con UNION además sale todo en una misma columna.
SELECT empleados.nomem AS empleados_y_departamentos
FROM empleados
LEFT JOIN departamentos
ON empleados.numde = departamentos.numde
WHERE empleados.numde IS NULL
UNION
SELECT departamentos.nomde
FROM empleados
RIGHT JOIN departamentos
ON departamentos.numde = empleados.numde
WHERE empleados.numde IS NULL;

/*16. Muestra los empleados y sus respectivos departamentos haciendo uso de la combinación
interna INNER JOIN. ¿Aparecen el departamento NUEVO y el empleado NORBERTO?¿Por qué?*/
/*No aparecen.
Porque el campo del departamento numde de NORBERTO es NULL y el campo de empleado del departamento NUEVO es null.
Al departamento NUEVO no pertenece ningún empleado.*/
SELECT empleados.nomem AS nombre_empleados, departamentos.nomde AS nombre_departamentos
FROM empleados
INNER JOIN departamentos ON departamentos.numde = empleados.numde;

/*17. Realiza la misma consulta anterior donde se cumpla la condición que NUMDE está a NULL.
¿Aparece algún resultado?¿Por qué?*/
-- No, porque NORBERTO no tiene departamento.
SELECT empleados.nomem AS nombre_empleados, departamentos.nomde AS nombre_departamentos
FROM empleados
INNER JOIN departamentos ON departamentos.numde = empleados.numde
WHERE empleados.numde IS NULL;

-- 18. Muestra los empleados y sus respectivos departamentos haciendo uso de la combinación interna NATURAL JOIN.
SELECT nomem AS nombre_empleados, nomde AS nombre_departamentos
FROM empleados
NATURAL JOIN departamentos;

-- 19. Muestra la combinación de las 3 tablas CENTROS, DEPARTAMENTOS y EMPLEADOS haciendo uso de NATURAL JOIN.
SELECT nomem AS nombre_empleados, nomde AS nombre_departamentos, nomce AS nombre_centro
FROM empleados
NATURAL JOIN departamentos, centros;

-- 20. Borra los registros dados de alta para el departamento NUEVO y el empleado introducido en el apartado anterior.
DELETE 
FROM departamentos
WHERE numde = 131;

DELETE 
FROM empleados
WHERE numem = 600;

